<!-- PUBLIC "-//ICHM2//DTD ICH ICSR Acknowledgment Vers. 1.1//EN"  "ich-icsrack-v1.1.dtd"  -->
<!--
	Individual Case Safety Report Acknowledgment Document Type Definition

 	The DTD issued by the ICH M2 group and is public domain in nature.

	No one can claim copyright on this DTD.
	No commercial distribution is allowed.

	The ICH is not responsible for any damage or financial loss resulting from
	use of this DTD. This version is tentative in nature and changes are expected.
	This DTD is subject to the ICH M2 change control procedures.

	Version 1.0, Release 1.0
	Version 1.1, Release 1.0, Date to be decided
-->
<!-- TECHNICAL NOTE

	ICH ICSR SGML Declaration

To correctly parse an ICH ICSR SGML message requires the selection of the 
correct SGML declaration, along with this DTD, and the ICH ICSR SGML instance.  
This technical note provides guidance on which of several SGML declarations 
included with the ICH ICSR application to select based on the language and
character set used within the ICH ICSR SGML instance.  The method by which
an SGML parser is told to use a specific declaration is parser specific.
The three most common methods are:

1. Tell the parser via the command line which declaration to use.

2. Tell the parser via a specific environment variable which declaration 
to use.

3. If the parser supports SGML Open catalogs, within the catalog file
is a command that can tell the parser which declaration to use.  SGML
catalog files are an industry standard way to tell a parser how to find 
all of the pieces (declaration, DTD, SGML document instance) needed to 
successfully parse.

To cover all of the languages necessary to support the ICH ICSR application, 
ISO 10646 (UNICODE) would have to be used.  If this were the case, then only 
one SGML declaration would be needed to support all ICH ICSR languages.  
Because UNICODE support is not available in all popular computer application 
programs, the ICH M2 EWG has recommended that a variety of character sets be 
used at this time, instead of a single UNICODE character encoding.  For each 
of these different character encodings a different SGML declaration needs to 
be generated and used.      

Five SGML declarations are included with the ICH ICSR distribution.  They 
are described briefly below.

ich-icsr-latin1.dcl - This SGML declaration supports the ISO 8859-1 (Latin 1) 
character set.  This character set supports English, and most Western 
European languages.

ich-icsr-latin7.dcl - This SGML declaration supports the ISO 8859-7 (Latin 7) 
character set.  This character set supports Greek. 

ich-icsr-sjis.dcl - This SGML declaration supports the Shift JIS character 
set for encoding Japanese.

ich-icsr-utf8.dcl - This SGML declaration supports the ISO 10646 (UNICODE) 
UTF-8 character set.  This character set supports almost all of the worlds 
currently written languages.

ich-icsr-mult.dcl - This SGML declaration will support all of the currently 
defined ICHICSR languages, and it doesn't require the use of UNICODE.  It is 
however a "hack" that relies on a fortuitous characteristic of the languages 
currently being used within the ICH ICSR SGML application.  

This hack works because the character set documented within an SGML 
declaration is for the benefit of both the SGML parser, and the programmer 
who implements the SGML application.  The programmer needs detailed knowledge 
of all the characters being used to correctly code an application.  The parser 
only really needs to about some of the characters.  In particular it needs to 
know which characters signify an SGML event.  For instance that the "<" 
character starts an SGML open tag, and the "</" character sequence starts an 
SGML close tag.  All told, the parser needs to know very little.  Because of 
the particular combination of character sets being used within the ICH ICSR 
application, an SGML declaration can be defined that tells the parser just what 
it needs to know and still work across all of the different character sets.  
The catch is that this SGML declaration doesn't tell the programmer all that 
she or he needs to know to correctly code the rest of the application.  If this 
declaration is used, the programmer will have to get this detailed information 
from another source.

-->
<!-- ==================================================================	-->
<!-- Entities								-->
<!-- ==================================================================	-->
<!-- Use the lang attribute to indicate the language of an	
   elements content via an ISO 639 language Code.			-->
<!ENTITY % lang.att "lang CDATA #IMPLIED">
<!-- Standard Character Entities to escape SGML special characters.      
   When "<", ">", and "&" occur in text, they should be replaced      
   by "&lt;", "&gt;", and "&amp;" respectfully.                       -->
<!-- Less Than "<" -->
<!ENTITY lt "&#38;#60;">
<!-- Greater Than ">" -->
<!ENTITY gt "&#62;">
<!-- Ampersand "&" -->
<!ENTITY amp "&#38;#38;">
<!-- ==================================================================	-->
<!-- Elements and Attributes						-->
<!-- ==================================================================	-->
<!--
Entity ref:	
Entity title:	ICSR ACK MESSAGE
Comment :		The relational model of the Message is described in the following figure:

-->
<!ELEMENT ichicsrack (ichicsrmessageheader, acknowledgment)>
<!ATTLIST ichicsrack
	lang CDATA #REQUIRED
>
<!-- M.1 ICH ICSR Message Header Information -->
<!--
Entity ref:		M.1
Entity title:	ICSR ACK MESSAGE HEADER
-->
<!ELEMENT ichicsrmessageheader (messagetype, messageformatversion, messageformatrelease, messagenumb, messagesenderidentifier, messagereceiveridentifier, messagedateformat, messagedate)>
<!ATTLIST ichicsrmessageheader
	%lang.att; 
>
<!-- M.1.1 Message Type -->
<!--
Field ref:		M.1.1
Field title:	Message type
Field name:		messagetype
Field length:	16 AN
Field values:	ichicsrack
-->
<!ELEMENT messagetype (#PCDATA)>
<!ATTLIST messagetype
	%lang.att; 
>
<!-- M.1.2 Message Format Version -->
<!--
Field ref:		M.1.2
Field title:	Message Format Version
Field name:		messageformatversion
Field length:	3AN
Comment :	In Step 4 ICSR ACK DTD version 1.0, this field will have value "1".
-->
<!ELEMENT messageformatversion (#PCDATA)>
<!ATTLIST messageformatversion
	%lang.att; 
>
<!-- M.1.3 Message Format Release -->
<!--
Field ref:		M.1.3
Field title:	Message Format Release
Field name:		messageformatrelease
Field length:	3AN
Comment :	In Step 4 ICSR ACK DTD version 1.0, this field will have value "0".
-->
<!ELEMENT messageformatrelease (#PCDATA)>
<!ATTLIST messageformatrelease
	%lang.att; 
>
<!-- M.1.4 Message Number -->
<!--
Field ref:		M.1.4
Field title:	Message Number
Field name:		messagenumb
Field length:	100AN
Field values:	
-->
<!ELEMENT messagenumb (#PCDATA)>
<!ATTLIST messagenumb
	%lang.att; 
>
<!-- M.1.5 Message Sender Identifier -->
<!--
Field ref:		M.1.5
Field title:	Message Sender ID
Field name:		messagesenderidentifier
Field length:	60AN
Field values:	
-->
<!ELEMENT messagesenderidentifier (#PCDATA)>
<!ATTLIST messagesenderidentifier
	%lang.att; 
>
<!-- M.1.6 Message Receiver Identifier -->
<!--
Field ref:		M.1.6
Field title:	Message Receiver ID
Field name:		messagereceiveridentifier
Field length:	60AN
Field values:	
-->
<!ELEMENT messagereceiveridentifier (#PCDATA)>
<!ATTLIST messagereceiveridentifier
	%lang.att; 
>
<!-- M.1.7a Message Date Format -->
<!--
Field ref:		M.1.7a
Field title:	Message Date Format
Field name:		messagedateformat
Field length:	3N
Field values:	204=CCYYMMDDHHMMSS
-->
<!ELEMENT messagedateformat (#PCDATA)>
<!ATTLIST messagedateformat
	%lang.att; 
>
<!-- M.1.7b Message Date -->
<!--
Field ref:		M.1.7b
Field title:	Message Date
Field name:		messagedate
Field length:	14N
Field values:	CCYYMMDDHHMMSS
-->
<!ELEMENT messagedate (#PCDATA)>
<!ATTLIST messagedate
	%lang.att; 
>
<!-- A.1 ICSR Acknowledgment Message-->
<!--
Entity ref:	
Entity title:	ICSR Acknowledgment 
-->
<!ELEMENT acknowledgment (messageacknowledgment, reportacknowledgment*)>
<!ATTLIST acknowledgment
	%lang.att; 
>
<!-- A.1 Message Acknowledgment -->
<!--
Entity ref:		A.1
Entity title:	ICSR ACK MESSAGE ACKNOWLEGMENT 
-->
<!ELEMENT messageacknowledgment (icsrmessagenumb, localmessagenumb?, icsrmessagesenderidentifier, icsrmessagereceiveridentifier, icsrmessagedateformat, icsrmessagedate, transmissionacknowledgmentcode, parsingerrormessage?)>
<!ATTLIST messageacknowledgment
	%lang.att; 
>
<!-- A.1.1 ICSR Message Number -->
<!--
Field ref:		A.1.1
Field title:	ICSR Message Number
Field name:		icsrmessagenumb
Field length:	100AN
Comment :	
-->
<!ELEMENT icsrmessagenumb (#PCDATA)>
<!ATTLIST icsrmessagenumb
	%lang.att; 
>
<!-- A.1.2 Local Message Number -->
<!--
Field ref:		A.1.2
Field title:	Local Message Number
Field name:		localmessagenumb
Field length:	100AN
Field values:	
-->
<!ELEMENT localmessagenumb (#PCDATA)>
<!ATTLIST localmessagenumb
	%lang.att; 
>
<!-- A.1.3 ICSR Message Sender Identifier -->
<!--
Field ref:		A.1.3
Field title:	ICSR Message Sender ID
Field name:		icsrmessagesenderidentifier
Field length:	60AN
Field values:	
-->
<!ELEMENT icsrmessagesenderidentifier (#PCDATA)>
<!ATTLIST icsrmessagesenderidentifier
	%lang.att; 
>
<!-- A.1.4 ICSR Message Receiver Identifier -->
<!--
Field ref:		A.1.4
Field title:	ICSR Message Receiver ID
Field name:		icsrmessagereceiveridentifier
Field length:	60AN
Field values:	
-->
<!ELEMENT icsrmessagereceiveridentifier (#PCDATA)>
<!ATTLIST icsrmessagereceiveridentifier
	%lang.att; 
>
<!-- A.1.5a ICSR Message Date Format -->
<!--
Field ref:		A.1.5a
Field title:	ICSR Message Date
Field name:		icsrmessagedateformat
Field length:	3N
Field values:	204=CCYYMMDDHHMMSS
-->
<!ELEMENT icsrmessagedateformat (#PCDATA)>
<!ATTLIST icsrmessagedateformat
	%lang.att; 
>
<!-- A.1.5b ICSR Message Date -->
<!--
Field ref:		A.1.5b
Field title:	ICSR Message Date
Field name:		icsrmessagedate
Field length:	14N
Field values:	CCYYMMDDHHMMSS
-->
<!ELEMENT icsrmessagedate (#PCDATA)>
<!ATTLIST icsrmessagedate
	%lang.att; 
>
<!-- A.1.6 Transmission Acknowledgment -->
<!--
Field ref:		A.1.6
Field title:	Transmission Acknowledgment Code
Field name:		transmissionacknowledgmentcode
Field length:	2N
Field values:	
01=All Reports loaded into database
02=ICSR Error, not all reports loaded into the database, check section B
03=SGML parsing error, no data extracted
-->
<!ELEMENT transmissionacknowledgmentcode (#PCDATA)>
<!ATTLIST transmissionacknowledgmentcode
	%lang.att; 
>
<!-- A.1.7 Parsing Error Message -->
<!--
Field ref:		A.1.7
Field title:	Parsing Error Message
Field name:		parsingerrormessage
Field length:	250AN
-->
<!ELEMENT parsingerrormessage (#PCDATA)>
<!ATTLIST parsingerrormessage
	%lang.att; 
>
<!-- B.1 Report Acknowledgment -->
<!--
Entity ref:		B.1
Entity title:	ICSR ACK REPORT ACKNOWLEGMENT
-->
<!ELEMENT reportacknowledgment (safetyreportversion?, safetyreportid, safetyreportversion?, localreportnumb?, authoritynumb?, companynumb?, receiptdateformat?, receiptdate?, reportacknowledgmentcode, errormessagecomment?)>
<!ATTLIST reportacknowledgment
	%lang.att; 
>
<!-- B.1.1 Safety Report Version -->
<!--
Field ref:		B.1.1
Field title:	Safety Report Version
Field name:		safetyreportversion
Field length:	2AN
-->
<!ELEMENT safetyreportversion (#PCDATA)>
<!ATTLIST safetyreportversion
	%lang.att; 
>
<!-- B.1.2 Safety Report Identification -->
<!--
Field ref:		B.1.2
Field title:	Safety Report ID
Field name:		safetyreportid
Field length:	100AN
-->
<!ELEMENT safetyreportid (#PCDATA)>
<!ATTLIST safetyreportid
	%lang.att; 
>
<!-- B.1.3 Local Report Number -->
<!--
Field ref:		B.1.3
Field title:	Local Report Number
Field name:		localreportnumber
Field length:	100AN
Comment :	A possible scenario for the use of localreportnumber is the following (MN: message number, RN: report number, CN: case number, MACKN: message being-acknowledged number, LRN: local report number):
-->
<!ELEMENT localreportnumb (#PCDATA)>
<!ATTLIST localreportnumb
	%lang.att; 
>
<!-- B.1.4  Regulatory authority's case report number (E2BM - A.1.10.1)-->
<!--
Field ref:		B.1.4
Field title:	National regulatory authority's case report number (E2B- A.1.10.1)
Field name:		authoritynumber
Field length:	100AN
-->
<!ELEMENT authoritynumb (#PCDATA)>
<!ATTLIST authoritynumb
	%lang.att; 
>
<!-- B.1.5 Other Sender's case report number (E2BM - A.1.10.2) -->
<!--
Field ref:		B.1.5
Field title:	Company's case report number (E2B - A.1.10.2)
Field name:		companynumber
Field length:	100AN
Field values:	
-->
<!ELEMENT companynumb (#PCDATA)>
<!ATTLIST companynumb
	%lang.att; 
>
<!-- B.1.7a Receipt Date Format -->
<!--
Field ref:		B.1.7a
Field title:	Receipt Date Format (E2B- A.1.7)
Field name:		receiptdateformat
Field length:	3N
Field values:	102 - Format CCYYMMDD
-->
<!ELEMENT receiptdateformat (#PCDATA)>
<!ATTLIST receiptdateformat
	%lang.att; 
>
<!-- B.1.7b Date of receipt of the most recent information (E2BM - A.1.7) -->
<!--
Field ref:		B.1.7b
Field title:	Date of receipt of the most recent information (E2B- A.1.7)
Field name:		receiptdate
Field length:	8N
Field values:	
-->
<!ELEMENT receiptdate (#PCDATA)>
<!ATTLIST receiptdate
	%lang.att; 
>
<!-- B.1.8 Acknowledgment Code for a report -->
<!--
Field ref:		B.1.8
Field title:	Acknowledgment Code for a report
Field name:		reportacknowledgmentcode
Field length:	2N
Field values:	
01=Report Loaded Successfully
02=Report Not Loaded
-->
<!ELEMENT reportacknowledgmentcode (#PCDATA)>
<!ATTLIST reportacknowledgmentcode
	%lang.att; 
>
<!-- B.1.9 Error Message or Comment -->
<!--
Field ref:		B.1.9
Field title:	Error Message or Comment
Field name:		errormessagecomment
Field length:	250AN
Field values:	
-->
<!ELEMENT errormessagecomment (#PCDATA)>
<!ATTLIST errormessagecomment
	%lang.att; 
>
